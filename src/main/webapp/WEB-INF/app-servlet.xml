<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	  http://www.springframework.org/schema/mvc/spring-mvc.xsd
	 	 http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<context:annotation-config></context:annotation-config>
	<mvc:annotation-driven
		enable-matrix-variables="true" />
	<mvc:resources location="/resources/" mapping="/res/**"></mvc:resources>
	<mvc:resources location="file:/D:/Development/Files/Web/"
		mapping="/WebAsset/**"></mvc:resources>
	<mvc:interceptors>
		<bean id="handlerInterceptor"
			class="com.fajar.entitymanagement.config.MyHandlerInterceptor" />
	</mvc:interceptors>
	<jpa:repositories
		base-package="com.fajar.entitymanagement.repository" />

	<context:component-scan
		base-package="com.fajar.entitymanagement" />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Configuration for Redis Client -->
	<bean id="jedisPoolConfig"
		class="redis.clients.jedis.JedisPoolConfig">

	</bean>

	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="localhost" />
		<property name="port" value="6379" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<bean name="redisTemplate"
		class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory">
	</bean>

	<!-- web app custom config -->
	<bean id="webAppConfig"
		class="com.fajar.entitymanagement.service.WebConfigService">
		<property name="basePage" value="BASE_PAGE"></property>
		<property name="appCode" value="SHOP996"></property>
		<property name="DEFAULT_USER_NAME" value="admin"></property>
		<property name="DEFAULT_USER_PWD" value="123"></property>
		<property name="uploadedImageRealPath"
			value="D:/Development/Files/Web/Shop1/Images"></property>
		<property name="uploadedImagePath"
			value="WebAsset/Shop1/Images"></property>
		<property name="reportPath"
			value="D:/Development/Files/Web/Shop1/Reports"></property>
	</bean>

	<!-- persistence -->


	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory"
			ref="entityManagerFactory"></property>
	</bean>

	<!-- <bean id="sessionFactory" class="org.hibernate.internal.SessionFactoryImpl"/> -->

	<bean id="dataSource_OFFLINE"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/base_app" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean> 
	
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan"
			value="com.fajar.entitymanagement*" />
		<property name="dataSource" ref="dataSource_OFFLINE" /><!-- <property 
			name="sessionFactory" ref="sessionFactory"></property> -->
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop><!-- change 'create' for the first run  -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.current_session_context_class">org.hibernate.context.internal.ThreadLocalSessionContext
				</prop>
			</props>
		</property>
		<property name="persistenceProvider"
			ref="persistenceProvider">
			<!-- <bean class="org.hibernate.jpa.HibernatePersistenceProvider"></bean> -->
		</property>
	</bean>

	<bean id="persistenceProvider"
		class="org.hibernate.jpa.HibernatePersistenceProvider" />

	<bean id="objectMapper"
		class="com.fasterxml.jackson.databind.ObjectMapper" />


</beans>